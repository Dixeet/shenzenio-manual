import{_ as r,C as a,o as u,c,H as l,w as n,k as t,a as e}from"./chunks/framework.9e21ba36.js";const d="/shenzenio-manual/assets/18.9cae9504.webp",p="/shenzenio-manual/assets/19.217b7e95.webp",h="/shenzenio-manual/assets/20.06ee99f8.webp",G=JSON.parse('{"title":"DX300 DIGITAL I/O EXPANDER","description":"","frontmatter":{},"headers":[],"relativePath":"parts/dx300.md","filePath":"parts/dx300.md"}'),m={name:"parts/dx300.md"},g=t("hr",null,null,-1),_=t("h1",{id:"dx300-digital-i-o-expander",tabindex:"-1"},[e("DX300 "),t("br"),e("DIGITAL I/O EXPANDER "),t("a",{class:"header-anchor",href:"#dx300-digital-i-o-expander","aria-label":'Permalink to "DX300 <br>DIGITAL I/O EXPANDER"'},"​")],-1),f=t("hr",null,null,-1),x=t("h2",{id:"description",tabindex:"-1"},[e("Description "),t("a",{class:"header-anchor",href:"#description","aria-label":'Permalink to "Description"'},"​")],-1),b=t("p",null,"Control the world with the DX300 digital I/O expander! This unique and useful part can read or write up to three on/off signals at once over simple I/O or XBus.",-1),y=t("p",null,"It is sure to find its ideal application in answering many of your control and signal processing needs. Contact us to request samples.",-1),O=t("h2",{id:"pin-configuration",tabindex:"-1"},[e("Pin configuration "),t("a",{class:"header-anchor",href:"#pin-configuration","aria-label":'Permalink to "Pin configuration"'},"​")],-1),X=t("img",{src:d,alt:"DX300"},null,-1),D=t("p",null,[t("em",null,[e("NOTE: At any given time, the DX300 is either in "),t("strong",null,"input mode"),e(" or "),t("strong",null,"output mode"),e(". Writing an XBus value to the DX300 will put its simple I/O pins into "),t("strong",null,"output mode"),e(" with the specified output values."),t("br"),e(" Reading an XBus value from the DX300 will put its pins into "),t("strong",null,"input mode"),e(", clearing any previously set output values.")])],-1),I=t("h2",{id:"usage",tabindex:"-1"},[e("Usage "),t("a",{class:"header-anchor",href:"#usage","aria-label":'Permalink to "Usage"'},"​")],-1),E=t("ul",null,[t("li",null,[t("p",null,[t("strong",null,"Write"),e(" a 3-digit number to any XBus pin to change the state of the simple I/O pins. The three digits of the value written will be used to turn the simple I/O pins on (100) or off (0) depending on if the digit is a 1 or a 0.")])]),t("li",null,[t("p",null,[t("strong",null,"Read"),e(" from any XBus pin to get a 3-digit number that captures the state of the simple I/O pins. The digits of the resulting XBus value will be set to either a 1 or a 0 depending on if the simple I/O pin is on (100) or off (0).")])]),t("li",null,[t("p",null,"When representing the state of the simple I/O pins, the value in the ones column corresponds to p0, while the tens column corresponds to p1, and the hundreds column corresponds to p2.")])],-1),w=t("h2",{id:"example-table",tabindex:"-1"},[e("Example table "),t("a",{class:"header-anchor",href:"#example-table","aria-label":'Permalink to "Example table"'},"​")],-1),P=t("div",{class:"--flex --justify-center"},[t("table",null,[t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"XBus Value"),t("th",{style:{"text-align":"center"}},"p0"),t("th",{style:{"text-align":"center"}},"p1"),t("th",{style:{"text-align":"center"}},"p2")])]),t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"center"}},"100"),t("td",{style:{"text-align":"center"}},"0"),t("td",{style:{"text-align":"center"}},"0"),t("td",{style:{"text-align":"center"}},"100")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"011"),t("td",{style:{"text-align":"center"}},"100"),t("td",{style:{"text-align":"center"}},"100"),t("td",{style:{"text-align":"center"}},"0")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"000"),t("td",{style:{"text-align":"center"}},"0"),t("td",{style:{"text-align":"center"}},"0"),t("td",{style:{"text-align":"center"}},"0")])])])],-1),T=t("h2",{id:"dx300-example-circuit",tabindex:"-1"},[e("DX300 Example circuit "),t("a",{class:"header-anchor",href:"#dx300-example-circuit","aria-label":'Permalink to "DX300 Example circuit"'},"​")],-1),v=t("h4",{id:"stepper-motor-controller",tabindex:"-1"},[e("STEPPER MOTOR CONTROLLER "),t("a",{class:"header-anchor",href:"#stepper-motor-controller","aria-label":'Permalink to "STEPPER MOTOR CONTROLLER"'},"​")],-1),R=t("p",null,[e("The following circuit controls a stepper motor using 诚尚Micro’s DX300 digital I/O expander to control the "),t("strong",null,"motor-0"),e(", "),t("strong",null,"motor-1"),e(", and "),t("strong",null,"motor-2"),e(" signals and built-in simple I/O pin p0 to control the remaining "),t("strong",null,"motor-3"),e(" signal.")],-1),k=t("img",{src:p,alt:"DX300 Example circuit"},null,-1),B=t("br",null,null,-1),C=t("img",{src:h,alt:"DX300 Example circuit signal"},null,-1);function N(A,L,S,W,V,$){const i=a("WideSubtitleBlock"),o=a("ImgContainer"),s=a("TwoCols");return u(),c("div",null,[g,_,f,l(s,null,{left:n(()=>[l(i,{"is-subtitle":""},{default:n(()=>[x]),_:1}),b,y,l(i,null,{default:n(()=>[O]),_:1}),l(o,null,{default:n(()=>[X]),_:1}),D]),right:n(()=>[l(i,null,{default:n(()=>[I]),_:1}),E,l(i,null,{default:n(()=>[w]),_:1}),P]),_:1}),l(i,null,{default:n(()=>[T]),_:1}),v,R,l(o,null,{default:n(()=>[k]),_:1}),B,l(o,null,{default:n(()=>[C]),_:1})])}const M=r(m,[["render",N]]);export{G as __pageData,M as default};
