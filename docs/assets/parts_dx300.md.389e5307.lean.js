import{_ as r,C as o,o as d,c,H as n,w as l,k as e,a as t}from"./chunks/framework.9e21ba36.js";const L=JSON.parse('{"title":"DX300 DIGITAL I/O EXPANDER","description":"","frontmatter":{},"headers":[],"relativePath":"parts/dx300.md","filePath":"parts/dx300.md"}'),u={name:"parts/dx300.md"},p=e("hr",null,null,-1),h=e("h1",{id:"dx300-digital-i-o-expander",tabindex:"-1"},[t("DX300 "),e("br"),t("DIGITAL I/O EXPANDER "),e("a",{class:"header-anchor",href:"#dx300-digital-i-o-expander","aria-label":'Permalink to "DX300 <br>DIGITAL I/O EXPANDER"'},"​")],-1),g=e("hr",null,null,-1),m=e("h2",{id:"description",tabindex:"-1"},[t("Description "),e("a",{class:"header-anchor",href:"#description","aria-label":'Permalink to "Description"'},"​")],-1),_=e("p",null,"Control the world with the DX300 digital I/O expander! This unique and useful part can read or write up to three on/off signals at once over simple I/O or XBus.",-1),x=e("p",null,"It is sure to find its ideal application in answering many of your control and signal processing needs. Contact us to request samples.",-1),f=e("h2",{id:"pin-configuration",tabindex:"-1"},[t("Pin configuration "),e("a",{class:"header-anchor",href:"#pin-configuration","aria-label":'Permalink to "Pin configuration"'},"​")],-1),b=e("p",null,[e("em",null,[t("NOTE: At any given time, the DX300 is either in "),e("strong",null,"input mode"),t(" or "),e("strong",null,"output mode"),t(". Writing an XBus value to the DX300 will put its simple I/O pins into "),e("strong",null,"output mode"),t(" with the specified output values."),e("br"),t(" Reading an XBus value from the DX300 will put its pins into "),e("strong",null,"input mode"),t(", clearing any previously set output values.")])],-1),y=e("h2",{id:"usage",tabindex:"-1"},[t("Usage "),e("a",{class:"header-anchor",href:"#usage","aria-label":'Permalink to "Usage"'},"​")],-1),O=e("ul",null,[e("li",null,[e("p",null,[e("strong",null,"Write"),t(" a 3-digit number to any XBus pin to change the state of the simple I/O pins. The three digits of the value written will be used to turn the simple I/O pins on (100) or off (0) depending on if the digit is a 1 or a 0.")])]),e("li",null,[e("p",null,[e("strong",null,"Read"),t(" from any XBus pin to get a 3-digit number that captures the state of the simple I/O pins. The digits of the resulting XBus value will be set to either a 1 or a 0 depending on if the simple I/O pin is on (100) or off (0).")])]),e("li",null,[e("p",null,"When representing the state of the simple I/O pins, the value in the ones column corresponds to p0, while the tens column corresponds to p1, and the hundreds column corresponds to p2.")])],-1),X=e("h2",{id:"example-table",tabindex:"-1"},[t("Example table "),e("a",{class:"header-anchor",href:"#example-table","aria-label":'Permalink to "Example table"'},"​")],-1),D=e("div",{class:"--flex --justify-center"},[e("table",null,[e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"center"}},"XBus Value"),e("th",{style:{"text-align":"center"}},"p0"),e("th",{style:{"text-align":"center"}},"p1"),e("th",{style:{"text-align":"center"}},"p2")])]),e("tbody",null,[e("tr",null,[e("td",{style:{"text-align":"center"}},"100"),e("td",{style:{"text-align":"center"}},"0"),e("td",{style:{"text-align":"center"}},"0"),e("td",{style:{"text-align":"center"}},"100")]),e("tr",null,[e("td",{style:{"text-align":"center"}},"011"),e("td",{style:{"text-align":"center"}},"100"),e("td",{style:{"text-align":"center"}},"100"),e("td",{style:{"text-align":"center"}},"0")]),e("tr",null,[e("td",{style:{"text-align":"center"}},"000"),e("td",{style:{"text-align":"center"}},"0"),e("td",{style:{"text-align":"center"}},"0"),e("td",{style:{"text-align":"center"}},"0")])])])],-1),I=e("h2",{id:"dx300-example-circuit",tabindex:"-1"},[t("DX300 Example circuit "),e("a",{class:"header-anchor",href:"#dx300-example-circuit","aria-label":'Permalink to "DX300 Example circuit"'},"​")],-1),E=e("h4",{id:"stepper-motor-controller",tabindex:"-1"},[t("STEPPER MOTOR CONTROLLER "),e("a",{class:"header-anchor",href:"#stepper-motor-controller","aria-label":'Permalink to "STEPPER MOTOR CONTROLLER"'},"​")],-1),w=e("p",null,[t("The following circuit controls a stepper motor using 诚尚Micro’s DX300 digital I/O expander to control the "),e("strong",null,"motor-0"),t(", "),e("strong",null,"motor-1"),t(", and "),e("strong",null,"motor-2"),t(" signals and built-in simple I/O pin p0 to control the remaining "),e("strong",null,"motor-3"),t(" signal.")],-1),P=e("br",null,null,-1);function T(v,R,k,B,C,N){const i=o("WideSubtitleBlock"),a=o("ImgContainer"),s=o("TwoCols");return d(),c("div",null,[p,h,g,n(s,null,{left:l(()=>[n(i,{"is-subtitle":""},{default:l(()=>[m]),_:1}),_,x,n(i,null,{default:l(()=>[f]),_:1}),n(a,{src:"/images/18.webp",alt:"DX300"}),b]),right:l(()=>[n(i,null,{default:l(()=>[y]),_:1}),O,n(i,null,{default:l(()=>[X]),_:1}),D]),_:1}),n(i,null,{default:l(()=>[I]),_:1}),E,w,n(a,{src:"/images/19.webp",alt:"DX300 Example circuit"}),P,n(a,{src:"/images/20.webp",alt:"DX300 Example circuit signal"})])}const S=r(u,[["render",T]]);export{L as __pageData,S as default};
